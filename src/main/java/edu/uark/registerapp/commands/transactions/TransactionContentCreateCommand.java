package edu.uark.registerapp.commands.transactions;

import javax.transaction.Transactional;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import edu.uark.registerapp.commands.ResultCommandInterface;
import edu.uark.registerapp.models.api.TransactionContent;
import edu.uark.registerapp.models.entities.TransactionContentEntity;
import edu.uark.registerapp.models.repositories.TransactionContentRepository;

@Service
public class TransactionContentCreateCommand implements ResultCommandInterface<TransactionContent> {
	@Override
	public TransactionContent execute() {
		this.validateProperties();

		final TransactionContentEntity createTransactionContentEntity = this.createTransactionContentEntity();

		// Synchronize information generated by the database upon INSERT.
		this.apiTransactionContent.setId(createTransactionContentEntity.getID()); 
		this.apiTransactionContent.setCreatedOn(createTransactionContentEntity.getCreatedOn());

		return this.apiTransactionContent;
	}

	// Helper methods
	private void validateProperties() {
        // TO DO
        // Not sure bout error checking
	}

	@Transactional
	private TransactionContentEntity createTransactionContentEntity() {
		// Write, via an INSERT, the new record to the database.
		return this.transactionContentRepository.save(
            new TransactionContentEntity(apiTransactionContent));
	}

	// Properties
	private TransactionContent apiTransactionContent;
	public TransactionContent getApiTransactionContent() {
		return this.apiTransactionContent;
	}
	public TransactionContentCreateCommand setApiTransactionContent(final TransactionContent apiTransactionContent) {
		this.apiTransactionContent = apiTransactionContent;
		return this;
	}

    @Autowired
    private TransactionContentRepository transactionContentRepository;
}
